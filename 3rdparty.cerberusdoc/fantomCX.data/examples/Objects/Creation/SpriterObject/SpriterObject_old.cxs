Strict

#rem
	Script:			SpriterObject.cxs
	Description:	Sample fantomCX script, that shows how to load an Spriter animated object and playback its animations
	Author: 		Michael Hartlef
	Version:      	3.0
#End

' Set the AutoSuspend functionality to TRUE so OnResume/OnSuspend are called
#MOJO_AUTO_SUSPEND_ENABLED=True

'Set to false to disable webaudio support for mojo audio, and to use older multimedia audio system instead.
#HTML5_WEBAUDIO_ENABLED=True

' Add scml file format to the supported files
#TEXT_FILES+="|*.scml"

' Import the fantomCX framework which imports mojo2 itself
Import fantomCX

' The _g variable holds an instance to the cGame class
Global _g:cGame

'***************************************
Class spData
	Field folderList:IntMap<spFolder>
	Field entityList:IntMap<spEntity>
	'-----------------------------------------
	Method New()
		Self.folderList = New IntMap<spFolder>
		Self.entityList = New IntMap<spEntity>
	End
End
'***************************************
Class spFolder
	Field fileList:IntMap<spFile>
	Field id:Int
	Field name:String
	'-----------------------------------------
	Method New()
		Self.fileList = New IntMap<spFile>
	End
End
'***************************************
Class  spFile
	'<file id="0" name="TrollHead.png" width="182" height="192" pivot_x="0" pivot_y="1"/>
	Field name:String = ""
	Field id:Int = -1
	Field width:Int = 0
	Field height:Int = 0
	Field pivot_x:Float = 0.0
	Field pivot_y:Float = 0.0
	Field obj:ftObject = Null
End

'***************************************
Class spEntity
	Field id:Int
	Field name:String
	Field animList:StringMap<spAnim>
	'-----------------------------------------
	Method New()
		Self.animList = New StringMap<spAnim>
	End
End

'***************************************
Class  spAnim
	'<animation id="0" name="NewAnimation" length="1000" interval="100">
	Field name:String = ""
	Field id:Int = -1
	Field length:Int = 0
	Field interval:Int = 0
	Field mainLine:spMainLine
	Field timeLineList:IntMap<spTimeLine>
	'-----------------------------------------
	Method New()
		Self.mainLine = New spMainLine
		Self.timeLineList = New IntMap<spTimeLine>
	End
	
End
'***************************************
Class  spMainLine
	'<mainline>
	Field keyList:IntMap<spKeyM>
	'-----------------------------------------
	Method New()
		Self.keyList = New IntMap<spKeyM>
	End
End
'***************************************
Class  spKeyM
	'<key id="1" time="700">
	Field id:Int = -1
	Field time:Int = 0
	Field boneRefList:IntMap<spBoneRef>
	Field objRefList:IntMap<spObjRef>
	'-----------------------------------------
	Method New()
		Self.boneRefList = New IntMap<spBoneRef>
		Self.objRefList = New IntMap<spObjRef>
	End
End
'***************************************
'<bone_ref id="2" parent="1" timeline="4" key="0"/>
Class spBoneRef
	Field id:Int = -1
	Field timeline:Int = -1
	Field parent:Int = -1
	Field key:Int = -1
End
'***************************************
Class spObjRef
	'<object_ref id="1" timeline="1" key="0" z_index="1"/>
	Field id:Int = -1
	Field parent:Int = -1
	Field timeline:Int = -1
	Field key:Int = -1
	Field z_index:Int = -1
End	
'***************************************
Class  spTimeLine
	' <timeline id="1" name="TrollLA">
	Field name:String = ""
	Field id:Int = -1
	Field keyList:List<spKeyT>
	'-----------------------------------------
	Method New()
		Self.keyList = New List<spKeyT>
	End
End
'***************************************
Class  spKeyT
	'<key id="1" time="700" spin="-1">
	Field id:Int = -1
	Field time:Int = 0
	Field spin:Int = 0
	Field objList:List<spObject>
	Field boneList:List<spBone>
	'-----------------------------------------
	Method New()
		Self.objList = New List<spObject>
		Self.boneList = New List<spBone>
	End
End
'***************************************
Class spObject
	Field folder:Int = -1
	Field file:Int = -1
	Field x:Float = 0.0
	Field y:Float = 0.0
	Field pivotX:Float = 0.0
	Field pivotY:Float = 0.0
	Field angle:Float = 0.0
	Field scaleX:Float = 1.0
	Field scaleY:Float = 1.0
	Field alpha:Float = 1.0
End
'***************************************
Class spBone
	Field x:Float = 0.0
	Field y:Float = 0.0
	Field angle:Float = 0.0
	Field scaleX:Float = 1.0
	Field scaleY:Float = 1.0
End

'***************************************
' The cGame class controls the app
Class cGame Extends App
	' Create a field to store the instance of the cEngine class, which is an instance
	' of the ftEngine class itself
	Field fE:cEngine
	
	' Create a field for the default scene and layer of the engine
	Field defLayer:ftLayer
	Field defScene:ftScene
	
	Field spriterObj:ftObject
	
	Field sData:spData
	'------------------------------------------
	Method LoadSpriterObject:ftObject(filename:String, xPos:Float=0.0, yPos:Float=0.0)
		Local path:String
		Local plLen:Int
		Local xmlError:XMLError
		
		'Determine the file path for sub folders
		If filename.Find("/") > -1 Then
			Local pl:= filename.Split("/")
			plLen = pl.Length()
			For Local pi:= 0 To (plLen-2)
				path = path + pl[pi]+"/"
			Next
		Endif

	   	Local fileData:String  = LoadString(filename)
#If CONFIG="debug"
		If fileData.Length() = 0 Then Error ("~n~nError in file xxx.cxs, Method xxx )~n~nSpriter file " + filename + " doesn't exist!~n~n")
#End

'Print fileData
		Local xml:= ParseXML(fileData, xmlError)
		If xml = Null Error("doh failed!")
		'If xmlError.error = True Error(xmlError)	
		sData = New spData
		' Folders
		'<folder id="0">
		Local folder:= xml.GetChild("folder")
		While folder.valid
			If folder <> Null Then Print ("folder ID="+folder.GetAttribute("id"))
			
			Local sFolder := New spFolder
			sFolder.id = folder.GetAttribute("id",-1)
			sFolder.name = folder.GetAttribute("name")
		
			' files
	        '<file id="0" name="Trollbody.png" width="246" height="198" pivot_x="0.621951" pivot_y="0.065657"/>
	        Local file:= folder.GetChild("file")
			While file.valid
				If file <> Null Then Print ("    file id="+file.GetAttribute("id")+"   name="+path+file.GetAttribute("name"))
				
				Local si:= New spFile
				si.name = path+file.GetAttribute("name")
				si.id = file.GetAttribute("id", -1)
				si.width = file.GetAttribute("width", 0)
				si.height = file.GetAttribute("height", 0)
				si.pivot_x = file.GetAttribute("pivot_x", 0.0)
				si.pivot_y = 1.0 - file.GetAttribute("pivot_y", 0.0)
				si.obj = fE.CreateImage(si.name,xPos,yPos)
				si.obj.SetHandle(si.pivot_x, si.pivot_y)
				
				file = file.GetNextSibling("file")
				sFolder.fileList.Add(si.id, si)
			Wend
			sData.folderList.Add(sFolder.id, sFolder)
	    	folder = folder.GetNextSibling("folder")
	    Wend
    
	
		' Entities
		'<entity id="1" name="MyEntity_001">
		Local entity:= xml.GetChild("entity")
		While entity.valid
Print ("")	
			If entity <> Null Then Print ("Entity ID="+entity.GetAttribute("id")+"   name="+entity.GetAttribute("name"))

			Local se:= New spEntity
			se.name = entity.GetAttribute("name")
			se.id = entity.GetAttribute("id", -1)
			
			' Bones
			'<obj_info name="bone_000" type="bone" w="252.008" h="10"/>
			Local obj_info:= entity.GetChild("obj_info")
			While obj_info.valid
				If obj_info <> Null Then Print ("    obj_info name="+obj_info.GetAttribute("name")+"   type="+obj_info.GetAttribute("type"))
				obj_info = obj_info.GetNextSibling("obj_info")
			Wend
			
			' Animations
			'<animation id="0" name="NextAnim" length="1000" interval="100">
			Local animation:= entity.GetChild("animation")
			While animation.valid
Print ("")	
				If animation <> Null Then Print ("    animation ID="+animation.GetAttribute("id")+"   name="+animation.GetAttribute("name")+"   length="+animation.GetAttribute("length")+"   interval="+animation.GetAttribute("interval"))
				
				Local sa := New spAnim
				sa.id = animation.GetAttribute("id", -1)
				sa.name = animation.GetAttribute("name")
				sa.length = animation.GetAttribute("length", 0)
				sa.interval = animation.GetAttribute("interval", 0)
				
	            '<mainline>
	 			Local mainline:= animation.GetChild("mainline")
	 			If mainline <> Null Then Print ("        mainline") 
	            '<key id="0">
				Local key:= mainline.GetChild("key")
				While key.valid
Print ("")	
					If key <> Null Then Print ("            key ID="+key.GetAttribute("id")+"   time="+key.GetAttribute("time"))     
					
					Local sk:= New spKeyM
					sk.id = key.GetAttribute("id", -1)
					sk.time = key.GetAttribute("time", 0) 
                    
                    '<bone_ref id="2" parent="1" timeline="4" key="0"/>
                    Local bone_ref:=key.GetChild("bone_ref")
                    While bone_ref.valid
						If bone_ref <> Null Then Print ("                bone_ref ID="+bone_ref.GetAttribute("id")+"   parent="+bone_ref.GetAttribute("parent")+"   timeline="+bone_ref.GetAttribute("timeline")+"   key="+bone_ref.GetAttribute("key"))
                    	
                    	Local sbr := New spBoneRef
                    	sbr.id = bone_ref.GetAttribute("id", -1)
                    	sbr.parent = bone_ref.GetAttribute("parent", -1)
                    	sbr.timeline = bone_ref.GetAttribute("timeline", 0)
                    	sbr.key = bone_ref.GetAttribute("key", -1)
                    	sk.boneRefList.Add(sbr.id, sbr)
                    	
                    	bone_ref = bone_ref.GetNextSibling("bone_ref")
                    Wend
                    
                    '<object_ref id="0" parent="1" timeline="0" key="0" z_index="0"/>
                    Local object_ref:=key.GetChild("object_ref")
                    While object_ref.valid
						If object_ref <> Null Then Print ("                object_ref ID="+object_ref.GetAttribute("id")+"   parent="+object_ref.GetAttribute("parent")+"   timeline="+object_ref.GetAttribute("timeline")+"   z_index="+object_ref.GetAttribute("z_index"))
                    	
                    	Local sor := New spObjRef
                    	sor.id = object_ref.GetAttribute("id", -1)
                    	sor.parent = object_ref.GetAttribute("parent", -1)
                    	sor.timeline = object_ref.GetAttribute("timeline", 0)
                    	sor.key = object_ref.GetAttribute("key", -1)
                    	sor.z_index = object_ref.GetAttribute("z_index",0)
                    	sk.objRefList.Add(sor.id, sor)
                    	
                    	object_ref = object_ref.GetNextSibling("object_ref")
                    Wend
					
					sa.mainLine.keyList.Add(sk.id, sk)
					
					key = key.GetNextSibling("key")
				Wend
				

				'<timeline id="0" name="Trollbody">
	 			Local timeline:= animation.GetChild("timeline")
	 			While timeline.valid
Print ("")
	 				If timeline <> Null Then Print ("        timeline ID="+timeline.GetAttribute("id")+"   name="+timeline.GetAttribute("name"))
	 				Local stl := New spTimeLine
	 				
	 				'<key id="1" time="200" spin="-1">
					Local key:= timeline.GetChild("key")
					While key.valid
Print ("")	
						If key <> Null Then Print ("            key id="+key.GetAttribute("id")+"    time="+key.GetAttribute("time")+"    spin="+key.GetAttribute("spin"))
						Local skt := New spKeyT
						skt.id = key.GetAttribute("id", -1)
						skt.time = key.GetAttribute("time", 0)
						skt.spin = key.GetAttribute("spin", 1)
						
		 				'<object folder="0" file="0" x="6.669604" y="-19.11846" angle="269.006531"/>
		 				Local tlObject := key.GetChild("object")
		 				While tlObject.valid
		 					If tlObject <> Null Then Print ("                object folder="+tlObject.GetAttribute("folder")+"   file="+tlObject.GetAttribute("file")+"   x="+tlObject.GetAttribute("x")+"   y="+tlObject.GetAttribute("y")+"   angle="+tlObject.GetAttribute("angle"))
							
							Local spo := New spObject
							spo.folder = tlObject.GetAttribute("folder", -1)
							spo.file = tlObject.GetAttribute("file",-1)
							spo.x = tlObject.GetAttribute("x",0.0)
							spo.y = tlObject.GetAttribute("y",0.0)
							spo.angle = tlObject.GetAttribute("angle",0.0)
							spo.alpha = tlObject.GetAttribute("alpha",1.0)
							spo.pivotX = tlObject.GetAttribute("pivotX",0.0)
							spo.pivotY = 1.0 - tlObject.GetAttribute("pivotY",1.0)
							spo.scaleX = tlObject.GetAttribute("scaleX",1.0)
							spo.scaleY = tlObject.GetAttribute("scaleY",1.0)
 							skt.objList.AddLast(spo)
	
							tlObject = tlObject.GetNextSibling("object")
		 				Wend
		 				
		 				'<bone x="2.124975" y="25.990084" angle="93.300083"/>
		 				Local bone := key.GetChild("bone")
		 				While bone.valid
		 					If bone <> Null Then Print ("                bone x="+bone.GetAttribute("x")+"   y="+bone.GetAttribute("y")+"   angle="+bone.GetAttribute("angle"))
							
							Local spb := New spBone
							spb.x = bone.GetAttribute("x",0.0)
							spb.y = bone.GetAttribute("y",0.0)
							spb.angle = bone.GetAttribute("angle",0.0)
							spb.scaleX = bone.GetAttribute("scaleX",1.0)
							spb.scaleY = bone.GetAttribute("scaleY",1.0)
 							skt.boneList.AddLast(spb)

		 					bone = bone.GetNextSibling("bone")
		 				Wend
		 				stl.keyList.AddLast(skt)
		 				key = key.GetNextSibling("key")
					Wend
			
					sa.timeLineList.Add(stl.id, stl)
	 				timeline = timeline.GetNextSibling("timeline")
	 			Wend

				se.animList.Add(sa.name, sa)
				animation = animation.GetNextSibling("animation")
			Wend
			
			sData.entityList.Add(se.id, se)
			entity = entity.GetNextSibling("entity")
Print ("")	
		Wend


		Return Null
	End
	'------------------------------------------
	Method AnimSpriterObject:Int(time:Float)
	
	
	
		Return 0
	End
	'------------------------------------------
	Method OnClose:Int()
		fE.ExitApp()
		Return 0
	End
	'------------------------------------------
	Method OnBack:Int()
		Return 0
	End
	'------------------------------------------
	Method OnCreate:Int()
		' Create an instance of the fantomCX, which was created via the cEngine class
		fE = New cEngine
		
		'Set the virtual size of the canvas
		fE.SetCanvasSize(800,600)
		
		' Get the default scene of the engine
		defScene = fE.GetDefaultScene()

		' Get the default layer of the engine
		defLayer = fE.GetDefaultLayer()
		
		' Create a simple box
		Local box := fE.CreateBox(5,30,fE.GetCanvasWidth()-30,fE.GetCanvasHeight()-30)
		
		' Set color of the box to a nice yellow
		box.SetColor(255,255,0)
		
		' Let the box spin
		box.SetSpin(5)
		
		Local l1:= fE.CreateLine(0,fE.GetCanvasHeight()/2,fE.GetCanvasWidth(),fE.GetCanvasHeight()/2)
		Local l2:= fE.CreateLine(fE.GetCanvasWidth()/2,0,fE.GetCanvasWidth()/2,fE.GetCanvasHeight())
		
		'Loads the spriter object
		spriterObj = LoadSpriterObject("Yeti/Yeti.scml",fE.GetCanvasWidth()/2,fE.GetCanvasHeight()/2)

		Return 0
	End
	'------------------------------------------
	Method OnUpdate:Int()
		' If the CLOSE key was hit, exit the app ... needed for GLFW and Android I think. 
		If KeyHit( KEY_CLOSE ) Then fE.ExitApp()
		
		' Determine the delta time and the update factor for the engine
		Local timeDelta:Float = Float(fE.CalcDeltaTime())/60.0

		' Check if the engine is not paused
		If fE.GetPaused() = False Then
			' Update all objects of the engine
			fE.Update(timeDelta)
		Endif
		Return 0
	End
	'------------------------------------------
	Method OnRender:Int()
		' Check if the engine is not paused
		If fE.GetPaused() = False Then
			' Clear the screen 
			fE.Clear( 0,0,100)
		
			' Render all visible objects of the engine
			fE.Render()

			' Now draw the current FPS value to the screen
			fE.SetColor(255, 255, 0)
			fE.GetCanvas().DrawText( "FPS= "+fE.GetFPS(),fE.GetLocalX(10), fE.GetLocalY(10))
			fE.GetCanvas().DrawText( "fantomCX -> SpriterDemo",fE.GetLocalX(fE.GetCanvasWidth()-250), fE.GetLocalY(10))
			' Last, flip the previously drawn content to the screen, make it visible
			fE.RenderFlush()			
		Else
			fE.GetCanvas().DrawText("**** PAUSED ****",fE.GetLocalX(fE.GetCanvasWidth()/2.0),fE.GetLocalY(fE.GetCanvasHeight()/2.0),0.5, 0.5)
			' Last, flip the previously drawn content to the screen, make it visible
			fE.RenderFlush()
		Endif
		Return 0
	End
	'------------------------------------------
	Method OnLoading:Int()
		' If loading of assets in OnCreate takes longer, render a simple loading screen
		fE.RenderLoadingBar()
		
		Return 0
	End
	'------------------------------------------
	Method OnResume:Int()
		' Set the pause flag of the engine to FALSE so objects, timers and transitions are updated again
		fE.SetPaused(False)
		
		Return 0
	End
	'------------------------------------------
	Method OnSuspend:Int()
		' Set the pause flag of the engine to TRUE so objects, timers and transitions are paused (not updated)
		fE.SetPaused(True)
		
		Return 0
	End
End	

'***************************************
' The cEngine class extends the ftEngine class to override the On... methods
Class cEngine Extends ftEngine
	'------------------------------------------
	Method OnLayerTransition:Int(transId:Int, layer:ftLayer)
		' This method is called when a layer finishes its transition
		Return 0
	End
	'------------------------------------------
	Method OnLayerUpdate:Int(layer:ftLayer)
		' This method is called when a layer finishes its update
		Return 0
	End	
	'------------------------------------------
	Method OnObjectAnim:Int(obj:ftObject)
		'This Method is called when an animation of an object (obj) has finished one loop.
		Return 0
	End
	'------------------------------------------
	Method OnObjectCollision:Int(obj:ftObject, obj2:ftObject)
		' This method is called when an object collided with another object
		Return 0
	End
	'------------------------------------------
	Method OnObjectDelete:Int(obj:ftObject)
		' This method is called when an object is removed. You need to activate the event via ftObject.ActivateDeleteEvent.
		Return 0
	End
	'------------------------------------------
	Method OnObjectRender:Int(obj:ftObject)
		' This method is called when an object was being rendered. You need to activate the event via ftObject.ActivateRenderEvent.
		Return 0
	End
	'------------------------------------------
	Method OnObjectSort:Int(obj1:ftObject, obj2:ftObject)
		' This method is called when objects are compared during a sort of its layer list
		Return 0
	End	
	'------------------------------------------
	Method OnObjectTimer:Int(timerId:Int, obj:ftObject)
		' This method is called when an objects' timer was being fired.
		Return 0
	End	
	'------------------------------------------
	Method OnObjectTouch:Int(obj:ftObject, touchId:Int)
		' This method is called when an object is still touched
		Return 0
	End
	'------------------------------------------
	Method OnObjectTouchEnter:Int(obj:ftObject, touchId:Int)
		'This method is called when an object is first touched.
		Return 0
	End
	'------------------------------------------
	Method OnObjectTouchExit:Int(obj:ftObject, touchId:Int)
		'This method is called when an object is not touched anymore.
		Return 0
	End
	'------------------------------------------
	Method OnObjectTransition:Int(transId:Int, obj:ftObject)
		' This method is called when an object finishes its transition and the transition has an ID > 0.
		Return 0
	End
	'------------------------------------------
	Method OnObjectUpdate:Int(obj:ftObject)
		' This method is called when an object finishes its update. You can deactivate the event via ftObject.ActivateUpdateEvent.
		Return 0
	End

    '------------------------------------------
	Method OnTimer:Int(timerId:Int)
		' This method is called when an engine timer was being fired.
		Return 0
	End	
End

'***************************************
Function Main:Int()
	' Create an instance of the cGame class and store it inside the global var '_g'
	_g = New cGame
	
	Return 0
End

